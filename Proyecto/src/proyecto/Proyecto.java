/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;
import javax.swing.text.StyledDocument;

/**
 *
 * @author eduar
 */
public class Proyecto extends javax.swing.JFrame {

    /**
     * Creates new form IDE
     */
    public ArrayList<FileAttr> fileAttrArray;
    public ArrayList<javax.swing.JTextPane> textPaneArray;
    
    public Proyecto() {
        initComponents();
        this.fileAttrArray = new ArrayList<FileAttr>();
        this.fileAttrArray.add(new FileAttr(null, false));
        
        this.textPaneArray = new ArrayList<javax.swing.JTextPane>();
        this.textPaneArray.add(this.codePane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane7 = new javax.swing.JTextPane();
        codeTabsPanel = new javax.swing.JTabbedPane();
        mainScrollPane = new javax.swing.JScrollPane();
        codePane = new javax.swing.JTextPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        lexico = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPane5 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane6 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newFileBtn = new javax.swing.JMenuItem();
        openFileBtn = new javax.swing.JMenuItem();
        saveFileBtn = new javax.swing.JMenuItem();
        saveAsBtn = new javax.swing.JMenuItem();
        closeFileBtn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 400, 690));
        setMinimumSize(new java.awt.Dimension(1000, 600));
        setPreferredSize(new java.awt.Dimension(800, 529));

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(47, 800));

        jScrollPane2.setViewportView(jTextPane2);

        jTabbedPane1.addTab("Resultados", jScrollPane2);

        jScrollPane7.setViewportView(jTextPane7);

        jTabbedPane1.addTab("Errores", jScrollPane7);

        codePane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codePaneKeyReleased(evt);
            }
        });
        mainScrollPane.setViewportView(codePane);

        codeTabsPanel.addTab("Nuevo Archivo", mainScrollPane);

        lexico.setEditable(false);
        jScrollPane1.setViewportView(lexico);

        jTabbedPane3.addTab("Léxico", jScrollPane1);

        jTextPane5.setEditable(false);
        jScrollPane5.setViewportView(jTextPane5);

        jTabbedPane3.addTab("Sintáctico", jScrollPane5);

        jTextPane3.setEditable(false);
        jScrollPane3.setViewportView(jTextPane3);

        jTabbedPane3.addTab("Semántico", jScrollPane3);

        jTextPane6.setEditable(false);
        jScrollPane6.setViewportView(jTextPane6);

        jTabbedPane3.addTab("Código Intermedio", jScrollPane6);

        jMenu1.setText("Archivo");

        newFileBtn.setText("Nuevo");
        newFileBtn.setSelected(true);
        newFileBtn.setVerifyInputWhenFocusTarget(false);
        newFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileBtnActionPerformed(evt);
            }
        });
        jMenu1.add(newFileBtn);

        openFileBtn.setText("Abrir");
        openFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileBtnActionPerformed(evt);
            }
        });
        jMenu1.add(openFileBtn);

        saveFileBtn.setText("Guardar");
        saveFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveFileBtn);

        saveAsBtn.setText("Guardar Como...");
        saveAsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsBtnActionPerformed(evt);
            }
        });
        jMenu1.add(saveAsBtn);

        closeFileBtn.setText("Cerrar");
        closeFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileBtnActionPerformed(evt);
            }
        });
        jMenu1.add(closeFileBtn);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Formato");

        jMenuItem8.setText("Fuente");
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Proyecto");

        jMenuItem6.setText("Compilar");
        jMenu3.add(jMenuItem6);

        jMenuItem7.setText("Compilar y Ejecutar");
        jMenu3.add(jMenuItem7);

        jMenuItem9.setText("Analizar");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codeTabsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codeTabsPanel)
                    .addComponent(jTabbedPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileBtnActionPerformed

        this.newFile("Nuevo Archivo", "", null, false);        
        
    }//GEN-LAST:event_newFileBtnActionPerformed

    public void newFile(String name, String text, File f, boolean saved) {
        javax.swing.JScrollPane newScrollPane = new javax.swing.JScrollPane();
        newScrollPane.setAutoscrolls(true);
        newScrollPane.setBounds(this.mainScrollPane.getBounds());
        
        javax.swing.JTextPane newPane = new javax.swing.JTextPane();
        newPane.setBounds(this.mainScrollPane.getBounds());
        newPane.setText(text);
        
        newPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPaneKeyReleased(evt);
            }
        });
        
        newScrollPane.setViewportView(newPane);
        codeTabsPanel.addTab(name, newScrollPane);
        this.fileAttrArray.add(new FileAttr(f, saved));
        this.textPaneArray.add(newPane);
        
        
        //System.out.println(this.codeTabsPanel.getTabCount()-1);
        //this.codeTabsPanel.getTabComponentAt(this.codeTabsPanel.getTabCount()-1).requestFocus();
        //System.out.println(this.codeTabsPanel.getSelectedIndex());
        this.codeTabsPanel.setSelectedIndex(this.codeTabsPanel.getTabCount()-1);
        
    }
    
    private void openFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileBtnActionPerformed
        // TODO add your handling code here:
        Scanner entrada = null;
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
        
        try {
            String ruta = fileChooser.getSelectedFile().getAbsolutePath();
            File f = new File(ruta);
            entrada = new Scanner(f);
            String texto = "";
            String nombre = f.getName();
            
            while (entrada.hasNext()) {
                texto+=entrada.nextLine()+'\n';
            }
            
            this.newFile(nombre, texto, f, true);
            
            //this.fileAttrArray.add(new FileAttr(f, true));
            //System.out.println(f.getPath());
            System.out.println("Size: "+this.fileAttrArray.size());
            
            
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (NullPointerException e) {
            System.out.println("No se ha seleccionado ningún fichero");
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } finally {
            if (entrada != null) {
                entrada.close();
            }
        }
    }//GEN-LAST:event_openFileBtnActionPerformed

    private void saveAsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsBtnActionPerformed
        // Guardar Como
        this.guardarComo();

    }//GEN-LAST:event_saveAsBtnActionPerformed

    private void guardarComo() {
        
        JFileChooser guardar = new JFileChooser();
        guardar.showSaveDialog(null);
        guardar.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        File archivo = guardar.getSelectedFile();
        
        this.codeTabsPanel.setTitleAt(this.codeTabsPanel.getSelectedIndex(), archivo.getName());

        System.out.println(((javax.swing.JTextPane)this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex())));
        guardarFichero(((javax.swing.JTextPane)this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex())).getText(), archivo);
        
    }
    
    private void closeFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileBtnActionPerformed
        if(this.codeTabsPanel.getTabCount() > 1) {
            System.out.println("Selected index:"+this.codeTabsPanel.getSelectedIndex());
            this.fileAttrArray.remove(this.codeTabsPanel.getSelectedIndex());
            this.codeTabsPanel.remove(this.codeTabsPanel.getSelectedIndex());
            this.textPaneArray.remove(this.codeTabsPanel.getSelectedIndex());
        } else {
            System.out.println("Ya es toda wey xD");   
        }
    }//GEN-LAST:event_closeFileBtnActionPerformed

    private void codePaneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codePaneKeyReleased
        this.analyzeText((javax.swing.JTextPane)evt.getComponent(), ((javax.swing.JTextPane)(evt.getComponent())).getText());
    }//GEN-LAST:event_codePaneKeyReleased

    private void saveFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileBtnActionPerformed
        // Guardar
        //System.out.println(((javax.swing.JTextPane)this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex())).getText());
        
        if(this.fileAttrArray.get(this.codeTabsPanel.getSelectedIndex()).getFile() == null)
            this.guardarComo();
        else
            this.guardarFichero(
                    ((javax.swing.JTextPane)this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex())).getText(),
                    this.fileAttrArray.get(this.codeTabsPanel.getSelectedIndex()).getFile()
            );
        
        System.out.println(((javax.swing.JTextPane)this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex())).getText());
    }//GEN-LAST:event_saveFileBtnActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        int index = this.codeTabsPanel.getSelectedIndex();
        if(this.fileAttrArray.get(index).getFile() == null) {
            this.guardarComo();
        } else {
            this.guardarFichero(this.textPaneArray.get(index).getText(), this.fileAttrArray.get(index).getFile());
        }
        
        this.lexer(this.textPaneArray.get(this.codeTabsPanel.getSelectedIndex()));
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void newPaneKeyReleased(java.awt.event.KeyEvent evt) {                                     
        this.analyzeText((javax.swing.JTextPane)evt.getComponent(), ((javax.swing.JTextPane)(evt.getComponent())).getText());
    }   
    
    public void analyzeText(javax.swing.JTextPane textPane, String text) {
        //mas cosas
        this.paintText(textPane);
    }
    
    //METODO PARA ENCONTRAR LAS ULTIMAS CADENAS DE JTEXTPANE
    private int findLastNonWordChar(String text, int index){
        while(--index >= 0){
            if(String.valueOf(text.charAt(index)).matches("\\W")){
                break;
            }
        }
        return index;
    }
    
      //METODO PARA ENCONTRAR LAS PRIMERAS CADENAS DE JTEXTPANE
    private int findFirstNonWordChar(String text, int index){
        while(index < text.length()){
            if(String.valueOf(text.charAt(index)).matches("\\W")){
                break;
            }
            index++;
        }
        return index;
    }
    
    public void paintText(javax.swing.JTextPane textPane) { 
        final StyleContext cont = StyleContext.getDefaultStyleContext();
        
        //COLORES
        final AttributeSet attred = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, new Color(255,0,0));
        //final AttributeSet attgreen = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, new Color(0,255,0));
        final AttributeSet attblue = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, new Color(0,0,255));        
        final AttributeSet attblack = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, new Color(0,0,0));
        
        //STYLE
        DefaultStyledDocument doc = new DefaultStyledDocument(){
            @Override
            public void insertString(int offset, String str, AttributeSet a) throws BadLocationException {
                super.insertString(offset, str, a);
                String text = getText(0,getLength());
                int before = findLastNonWordChar(text,offset);
                if(before < 0){
                    before = 0;
                }
                int after = findFirstNonWordChar(text,offset+str.length());
                int wordL = before;
                int wordR = before;
                
                while(wordR <= after){
                    if(wordR == after || String.valueOf(text.charAt(wordR)).matches("\\W")){
                        if(text.substring(wordL, wordR).matches("(\\W)*(if|for|while|switch|case|else)(\\W)*")){
                            setCharacterAttributes(wordL, wordR - wordL,attblue,false);
                        }
                        else if(text.substring(wordL,wordR).matches("(\\W)*(int|double|boolean|String)(\\W)*")){
                            setCharacterAttributes(wordL, wordR - wordL,attred,false);
                        }else{
                            setCharacterAttributes(wordL, wordR - wordL,attblack,false);
                        }
                        wordL = wordR;
                    }
                    wordR++;
                }
            }
            public void remove(int offs, int len) throws BadLocationException {
                super.remove(offs, len);
                
                String text = getText(0,getLength());
                int before = findLastNonWordChar(text,offs);
                if(before < 0 ){
                    before = 0;
                }
            }
        };
        
        JTextPane txt = new JTextPane(doc);
        String temp = textPane.getText();
        textPane.setStyledDocument(txt.getStyledDocument());
        textPane.setText(temp);
    }
    
    /**
     * @param args the command line arguments
     */
    
    public void guardarFichero(String cadena, File archivo){
        
        System.out.println("Cadena: "+cadena);
        
        FileWriter escribir;
        
        try {
            /*escribir = new FileWriter(archivo, true);
            escribir.write(cadena);
            escribir.close();*/
            PrintWriter pw = new PrintWriter(archivo);
            pw.write(cadena);
            pw.close();

            FileAttr newFileAttr = new FileAttr(archivo, true);
            this.fileAttrArray.set(this.codeTabsPanel.getSelectedIndex(), newFileAttr);
            //this.fileAttrArray.add(newFileAttr);

            //System.out.println(this.codeTabsPanel.getSelectedIndex());
            System.out.println(((FileAttr)this.fileAttrArray.get(this.codeTabsPanel.getSelectedIndex())).toString());

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar, ponga nombre al archivo");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error al guardar, en la salida");
        }
    }
    
    private void lexer(javax.swing.JTextPane textPane) {
        int index = this.codeTabsPanel.getSelectedIndex();
        File archivo = new File(this.fileAttrArray.get(index).getFile().getPath());
        PrintWriter escribir;
        try {
            escribir = new PrintWriter(archivo);
            escribir.print(textPane.getText());
            escribir.close();
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            Reader lector = new BufferedReader(new FileReader(archivo));
            Lexer lexer = new Lexer(lector);
            String resultado = "";
            
            while (true) {
                Tokens tokens = lexer.yylex();
                if (tokens == null) {
                    resultado += "FIN";
                    this.lexico.setText(resultado);
                    //txtResultado.setText(resultado);
                    return;
                }
                switch (tokens) {
                    case ERROR:
                        resultado += "Simbolo no definido\n";
                        break;
                    case Identificador: case Numero: case Reservadas:
                        resultado += lexer.lexeme + ": Es un " + tokens + "\n";
                        break;
                    default:
                        resultado += "Token: " + tokens + "\n";
                        break;
                }
            }
        } catch (FileNotFoundException ex) {
            //Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            //Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proyecto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem closeFileBtn;
    private javax.swing.JTextPane codePane;
    private javax.swing.JTabbedPane codeTabsPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane5;
    private javax.swing.JTextPane jTextPane6;
    private javax.swing.JTextPane jTextPane7;
    private javax.swing.JTextPane lexico;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JMenuItem newFileBtn;
    private javax.swing.JMenuItem openFileBtn;
    private javax.swing.JMenuItem saveAsBtn;
    private javax.swing.JMenuItem saveFileBtn;
    // End of variables declaration//GEN-END:variables
}
